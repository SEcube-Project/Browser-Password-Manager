CC        := g++
LD        := g++

s+ = $(subst \\ ,+,$1)
+s = $(subst +,\ ,$1) 

# MODULES   := $(shell find sources -name '*.c*' -printf '%h\n' | sort | uniq)
# MODULES   := $(shell find sources -name '*.c*' -printf '%h\n' |  sed 's/ /\ /g' | sort | uniq)
MODULES   := $(shell find sources -name '*.c*' -printf '%h\n' |  sed 's/ /\\\\ /g' | sort | uniq)
BASE_DIR  := sources
SRC_DIR   := $(call s+,$(MODULES))
SRC_DIR   := $(addprefix $(BASE_DIR)/,$(SRC_DIR))
BUILD_DIR := $(call s+,$(MODULES)) 
BUILD_DIR := $(addprefix build/,$(BUILD_DIR))

# SRC       := $(foreach sdir,$(call +s,$(SRC_DIR)),$(wildcard $(sdir)/*.cpp))
SRC       := $(shell find sources -name '*.c*' | sed 's/ /\\\\ /g')
OBJ       := $(call s+,$(SRC))
OBJ       := $(patsubst $(BASE_DIR)/%.cpp,build/%.o,$(OBJ))
INCLUDES  := $(addprefix -I,$(SRC_DIR))

vpath %.cpp $(SRC_DIR)

define make-goal
$1/%.o: %.cpp
	$(CC) $(INCLUDES) -c $$< -o $$@
endef

.PHONY: all checkdirs clean

all: 
	@echo $(MODULES)
	@echo 
	@echo $(SRC_DIR)
	@echo 
	@echo $(BUILD_DIR)
	@echo 
	@echo $(SRC)
	@echo 
	@echo $(OBJ)


build/test: $(OBJ)
	$(LD) $^ -o $@


checkdirs: $(BUILD_DIR)

$(BUILD_DIR):
	mkdir -p $@

clean:
	@rm -rf $(BUILD_DIR)

$(foreach bdir,$(BUILD_DIR),$(eval $(call make-goal,$(bdir))))
